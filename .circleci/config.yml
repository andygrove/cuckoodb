version: 2
jobs:
  refresh_cache:
    docker:
      - image: rust:latest
    steps:
      - checkout
      - restore_cache:
          keys:
            - cargo-v1-{{ checksum "Cargo.toml" }}
      - run: cargo update
      - run: cargo fetch
      - save_cache:
          key: cargo-v1-{{ checksum "Cargo.toml" }}
          paths:
            - /usr/local/cargo/registry
            - /usr/local/cargo/git
  build_stable:
    docker:
      - image: rust:latest
    steps:
      - checkout
      - restore_cache:
          keys:
            - cargo-v1-{{ checksum "Cargo.toml" }}
      - run:
          name: Building Main Code
          command: sh scripts/circle/build.sh
      - run:
          name: Building Examples
          command: sh scripts/circle/build-examples.sh
      - run:
          name: Test Code
          command: sh scripts/circle/test.sh
  build_nightly:
    docker:
      - image: rustlang/rust:nightly
    steps:
      - checkout
      - restore_cache:
          keys:
            - cargo-v1-{{ checksum "Cargo.toml" }}
      - run:
          name: Nightly Version Info
          command: rustc --version; cargo --version
      - run:
          name: Building Main Code
          command: sh scripts/circle/build.sh
      - run:
          name: Building Examples
          command: sh scripts/circle/build-examples.sh
      - run:
          name: Test Code
          command: sh scripts/circle/test.sh
  build_for_deployment:
    docker:
      - image: rust:latest
    steps:
      - checkout
      - run:
          name: Building Code for Release
          command: cargo build --release
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /root/project/target/release
  do_deployment:
    machine: true
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-{{ .Branch }}-{{ epoch }}
      - run:
          name: Installing payload required for Docker Utilities
          command: sh scripts/docker/install-docker.sh
      - run:
          name: Building Docker Container with Deployment
          command: DOCKER_PUSH="true" sh scripts/docker/build.sh
workflows:
  version: 2
  stable:
    jobs:
      - refresh_cache
      - build_stable
  nightly:
    jobs:
      - refresh_cache
      - build_nightly
  build-deploy:
    jobs:
      - do_deployment:
          requires:
            - build_for_deployment
          filters:
            branches:
              only: circleci
